/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    implementation 'io.netty:netty-all:4.1.65.Final'
    implementation 'mysql:mysql-connector-java:8.0.26'
    implementation 'org.mindrot:jbcrypt:0.4'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.69'
    testImplementation 'junit:junit:4.13.2'
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'  // Add this for SQLite
    implementation 'org.slf4j:slf4j-api:1.7.32' // Add SLF4J API for logging
    implementation 'org.slf4j:slf4j-simple:1.7.32' // Add SLF4J Simple binding for logging
    implementation 'io.github.cdimascio:java-dotenv:5.2.2' // Add Java dotenv for environment variables

}

application {
    // Define the main class for the application.
    mainClass = 'secureflow.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
